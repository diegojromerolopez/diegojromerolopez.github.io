<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Diego J's on Software Engineering Research</title><link href="/" rel="alternate"></link><link href="/feeds/diego-j.atom.xml" rel="self"></link><id>/</id><updated>2014-11-04T23:50:00+01:00</updated><entry><title>Back to basics: The Mythical Man-Month</title><link href="/posts/2014/11/back-to-basics-the-mythical-man-month/" rel="alternate"></link><updated>2014-11-04T23:50:00+01:00</updated><author><name>Diego J.</name></author><id>tag:,2014-11-04:posts/2014/11/back-to-basics-the-mythical-man-month/</id><summary type="html">&lt;p&gt;Frederick P. Brooks is what I'd call a true pioneer. Without any existing knowledge and only
his own experience in the &lt;em&gt;tar pit&lt;/em&gt; (as himself call this software development world),
he distilled some universal truths of the Software Engineering world. So, the Mythical
Man-Month is a summary of his ideas. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Fred Brooks photo from Wikipedia" src="./images/FredBrooks.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;This book is a night stand book, that is, you cannot hope to end it in a few days. You have
to read slowly, thinking as a 60s software developer, with their limited tools and machines to
fully understand this book.&lt;/p&gt;
&lt;p&gt;Its content can be seen as obvious, but is interesting seeing the thought process 
that made the bases of what we call now Software Engineering. Things like how to plan a software project,
team specialization, the use of high languages over efficiency, a strict and well-done documentation, etc. are
described with some detail in the book with real world examples of Brooks or men of his time.&lt;/p&gt;
&lt;p&gt;Of course many readers stop reading after ending chapter 2 where the author explains that
software projects are different compared to other projects because you cannot increase
development speed introducing more members to the developing team. You'll need to teach them
the project internals, increasing the overall time cost of the project. But I think every chapter
has its teaching.&lt;/p&gt;
&lt;p&gt;For example, in chapter 3, "The surgical team", Brooks compares a surgical team where
every member has a specialized tasks to his idea of software developing team. Nowadays
it is very common to see many jobs for "full-stack developers", what in my opinion is 
completely mistaken. You cannot expect to be fully competent in dozens of disciplines (and
technologies).&lt;/p&gt;
&lt;p&gt;Other interesting chapter for me is "The documentary hypothesis" where Brooks defends the idea
of having formal documents for each project like objetives, specifications, schedule, etc.
In the agile startup world this is simply wasted time, the old idea of "only the code is what
is important" has returned very strong this days because of the culture of skyrocketing your
career and rockstar programmer. This two ideas are a bit naïve and against the software engineering
principles of software quality and maintainability.&lt;/p&gt;
&lt;p&gt;The last thing I want to note about this book is that Brooks even defines the two careers
in the software world: programmers and management. Where many people see both of them
as oposite careers, Brooks sees them as complementary positions of the organization but
encouraging employees to stay in "the technical ladder" by paying them more. Yes, take a 
look to chapter "Plan the organization for a change". &lt;/p&gt;
&lt;p&gt;To conclude this post, Brooks' book is a window to the past that teach us many principles of
Software Engineering with real examples. I recommend its lecture to every undergraduate
student of Computer Science or Software Engineering degrees. Many of the problems of
nowadays software developing organizations can be seen in this book pages. I encourage
every software developer or software engineer to read this book and learn the basic
principles of Software Engineering.&lt;/p&gt;</summary><category term="books"></category><category term="software engineering"></category><category term="startup"></category></entry><entry><title>Welcome</title><link href="/posts/2014/10/welcome/" rel="alternate"></link><updated>2014-10-25T10:20:00+02:00</updated><author><name>Diego J.</name></author><id>tag:,2014-10-25:posts/2014/10/welcome/</id><summary type="html">&lt;p&gt;Welcome to Diego J’s blog on Software Engineering Research.&lt;/p&gt;
&lt;p&gt;For anyone not knowing me, I’m a web developer working in a startup in south Spain.&lt;/p&gt;
&lt;p&gt;In 2014 I ended my Software Engineering Research Masters Program and not satisfied with what I’ve learned, I’m going to continue my research in this field.&lt;/p&gt;
&lt;p&gt;This blog is going to be my notebook in this amazing trip. Please, note that this blogs only reflect my personal opinions and views.&lt;/p&gt;</summary><category term="blog testing"></category><category term="welcome"></category></entry></feed>