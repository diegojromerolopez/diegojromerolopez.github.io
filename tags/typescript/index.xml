<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>typescript on Diego J.'s Software Tar Pit</title><link>https://diegojromerolopez.github.io/tags/typescript/</link><description>Recent content in typescript on Diego J.'s Software Tar Pit</description><generator>Hugo -- gohugo.io</generator><managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-López)</managingEditor><webMaster>diegojromerolopez@gmail.com (Diego J. Romero-López)</webMaster><lastBuildDate>Thu, 05 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>The runtime type-checking operator in TypeScript</title><link>https://diegojromerolopez.github.io/blog/2024/12/the-runtime-type-checking-operator-in-typescript/</link><pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2024/12/the-runtime-type-checking-operator-in-typescript/</guid><description>The runtime type-checking operator in TypeScript I have been working with TypeScript for a while but for sure I am not an expert in the language (I feel more comfortable with Python).
I like the idea of type-safe but limiting the static type checking process can make you confident about what you are getting from outside sources, and if you do not trust those sources (you should NOT), you would need to include a lot of repetitive checks any time we read data from the outside.</description></item></channel></rss>