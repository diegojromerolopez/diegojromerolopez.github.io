<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>practices on Diego J.'s Software Tar Pit</title><link>https://diegojromerolopez.github.io/tags/practices/</link><description>Recent content in practices on Diego J.'s Software Tar Pit</description><generator>Hugo -- gohugo.io</generator><managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-López)</managingEditor><webMaster>diegojromerolopez@gmail.com (Diego J. Romero-López)</webMaster><lastBuildDate>Fri, 04 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/practices/index.xml" rel="self" type="application/rss+xml"/><item><title>When are full software rewrites needed?</title><link>https://diegojromerolopez.github.io/blog/2025/07/when-are-full-software-rewrites-needed/</link><pubDate>Fri, 04 Jul 2025 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2025/07/when-are-full-software-rewrites-needed/</guid><description>When are full software rewrites needed? Having dealt with a full rewrite of a software application recently, it left me wondering if it was needed at all, if there was any way to salvage the project or some parts of the project. Could we have avoided the rewrite?
Introduction There was a time where I had to maintain and extend a deprecated project, until the deadline came. I was upset because it was a failure of management to not be able to predict this outcome, and I was the one that was ordered to create the replacement.</description></item></channel></rss>