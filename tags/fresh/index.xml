<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fresh on Diego J.'s Software Tar Pit</title><link>https://diegojromerolopez.github.io/tags/fresh/</link><description>Recent content in fresh on Diego J.'s Software Tar Pit</description><generator>Hugo -- gohugo.io</generator><managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-López)</managingEditor><webMaster>diegojromerolopez@gmail.com (Diego J. Romero-López)</webMaster><lastBuildDate>Sat, 28 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/fresh/index.xml" rel="self" type="application/rss+xml"/><item><title>How to create a Dockerfile for your deno fresh project</title><link>https://diegojromerolopez.github.io/blog/2024/12/how-to-create-a-dockerfile-for-your-deno-fresh-project/</link><pubDate>Sat, 28 Dec 2024 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2024/12/how-to-create-a-dockerfile-for-your-deno-fresh-project/</guid><description>How to create a Dockerfile for your deno fresh project Sometimes creating a Dockerfile is an art, you need to be aware of what files include in each layer to leverage the docker cache. How can we do this with deno fresh?
Recommended or usual Dockerfile Most of the examples I have found in the internet (like this one) tend to copy all the files in the same Docker instruction:</description></item><item><title>How to add OTEL to your deno fresh project</title><link>https://diegojromerolopez.github.io/blog/2024/12/how-to-add-otel-to-your-deno-fresh-project/</link><pubDate>Fri, 27 Dec 2024 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2024/12/how-to-add-otel-to-your-deno-fresh-project/</guid><description>How to add OTEL to your deno fresh project OpenTelemetry is a standard for adding telemetry to your application. There are a myriad of implementations for almost all the programming languages. But you need to be aware that the particularities of each language can make integrating with OTEL very different in one case or other.
Introduction This post assumes you know what observability is, the best practices and the bare minimum that is accepted nowadays in modern applications.</description></item><item><title>How to write a simple middleware in deno fresh</title><link>https://diegojromerolopez.github.io/blog/2024/12/how-to-write-a-simple-middleware-in-deno-fresh/</link><pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2024/12/how-to-write-a-simple-middleware-in-deno-fresh/</guid><description>How to write a simple middleware in deno fresh Middlewares are layers that inject data or check the HTTP request and are used by a set of routes. They are very useful as they group functionality together. Let&amp;rsquo;s see how to implement a middleware in deno fresh.
Select the routes the middleware is going to affect The middlewares in deno fresh are created inside a _middleware.ts file. This file will affect the routes that are from its level to the bottom.</description></item></channel></rss>