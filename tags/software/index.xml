<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software on Diego J.'s Software Tar Pit</title><link>https://diegojromerolopez.github.io/tags/software/</link><description>Recent content in software on Diego J.'s Software Tar Pit</description><generator>Hugo -- gohugo.io</generator><managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-López)</managingEditor><webMaster>diegojromerolopez@gmail.com (Diego J. Romero-López)</webMaster><lastBuildDate>Fri, 24 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/software/index.xml" rel="self" type="application/rss+xml"/><item><title>What is your constraint? Mine is anti-work</title><link>https://diegojromerolopez.github.io/blog/2023/11/what-is-your-constraint-mine-is-anti-work/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2023/11/what-is-your-constraint-mine-is-anti-work/</guid><description>What is your constraint? Mine is anti-work We, as engineers, not only are worried about creating new things, we need to be able to detect the cause of future issues. However, we must not limit ourselves to software, but to the entire software development team organization.
How it all started: The Phoenix Project I was reading the other day the book &amp;ldquo;The Phoenix Project&amp;rdquo;, and while the book is a good read, I was geting bored.</description></item><item><title>Don't touch that</title><link>https://diegojromerolopez.github.io/blog/2023/10/dont-touch-that/</link><pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2023/10/dont-touch-that/</guid><description>Don&amp;rsquo;t touch that Have you ever been told &amp;ldquo;don&amp;rsquo;t touch that, if you modify that piece of code you are going to break anything&amp;rdquo;? How did you react to this comment? Did you feel &amp;ldquo;attacked&amp;rdquo; or simply ignored that piece of advice?
Code jungle Starting a working on a project that has some dark corners is a daunting task but following some guidelines can be useful.
Scary code There is always some scary code, I do not mean code that is difficult to understand, but code that has unintended consequences if modified.</description></item><item><title>Misconceptions about code comments</title><link>https://diegojromerolopez.github.io/blog/2023/09/misconceptions-about-code-comments/</link><pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2023/09/misconceptions-about-code-comments/</guid><description>Misconceptions about code comments I have been working in this industry since 2008, and it seems an idea is spreading through software companies: code comments are considered harmful. Is that true?
Where did all start? I think that this idea started with the Clean Code book and the subsequent talks by Robert C. Martin.
Uncle Bob (as people use to call him), has the idea that code should be self-explanatory, and if there is a comment, it is because code is not well structured.</description></item></channel></rss>