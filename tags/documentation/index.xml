<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>documentation on Diego J.'s Software Tar Pit</title><link>https://diegojromerolopez.github.io/tags/documentation/</link><description>Recent content in documentation on Diego J.'s Software Tar Pit</description><generator>Hugo -- gohugo.io</generator><managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</managingEditor><webMaster>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</webMaster><lastBuildDate>Sat, 02 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/documentation/index.xml" rel="self" type="application/rss+xml"/><item><title>Misconceptions about code comments</title><link>https://diegojromerolopez.github.io/blog/2023/09/misconceptions-about-code-comments/</link><pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</author><guid>https://diegojromerolopez.github.io/blog/2023/09/misconceptions-about-code-comments/</guid><description>Misconceptions about code comments I have been working in this industry since 2008, and it seems an idea is spreading through software companies: code comments are considered harmful. Is that true?
Where did all start? I think that this idea started with the Clean Code book and the subsequent talks by Robert C. Martin.
Uncle Bob (as people use to call him), has the idea that code should be self-explanatory, and if there is a comment, it is because code is not well structured.</description></item><item><title>Literate programming</title><link>https://diegojromerolopez.github.io/blog/2015/12/literate-programming/</link><pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</author><guid>https://diegojromerolopez.github.io/blog/2015/12/literate-programming/</guid><description>Donald E. Knuth coined the term Literate programming in this paper he wrote almost 40 years ago.
Knuth wrote a tool called WEB as a demonstration of what Literate Programming should be. This tool would understand Pascal and TeX code, using Pascal code to create a binary executable and using TeX code to compile its documentation file. Pascal code would be a bit different because of the use of predefined macros and it would be interleaved by TeX code describing what actions execute.</description></item></channel></rss>