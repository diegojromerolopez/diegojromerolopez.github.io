<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>immutability on Diego J.&#39;s Software Tar Pit</title>
    <link>https://diegojromerolopez.github.io/tags/immutability/</link>
    <description>Recent content in immutability on Diego J.&#39;s Software Tar Pit</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-López)</managingEditor>
    <webMaster>diegojromerolopez@gmail.com (Diego J. Romero-López)</webMaster>
    <lastBuildDate>Sun, 06 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/immutability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Immutability</title>
      <link>https://diegojromerolopez.github.io/blog/2021/06/immutability/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      <author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author>
      <guid>https://diegojromerolopez.github.io/blog/2021/06/immutability/</guid>
      <description>Introduction In this post I will explain the rationale about working with immutable objects and will present a personal project I&amp;rsquo;ve been working on the last few days: Gelidum.
Introducing Gelidum Gelidum (pronounced ye-lee-doom, meaning frozen in latin) is a python package that allows you to freeze and object (and all of its references), making it immutable. What does it mean to be immutable? All attributes of this object cannot have their values changed.</description>
    </item>
    
  </channel>
</rss>
