<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Diego J.'s Software Tar Pit</title><link>https://diegojromerolopez.github.io/tags/docker/</link><description>Recent content in docker on Diego J.'s Software Tar Pit</description><generator>Hugo -- gohugo.io</generator><managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</managingEditor><webMaster>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</webMaster><lastBuildDate>Mon, 05 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Override docker-compose.yml files</title><link>https://diegojromerolopez.github.io/blog/2022/12/override-docker-compose.yml-files/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</author><guid>https://diegojromerolopez.github.io/blog/2022/12/override-docker-compose.yml-files/</guid><description>Override docker-compose.yml files Sometimes we want to have different versions of docker-compose.yml files (one for production and one for development). Each environment has their own characteristics (slightly different images for example) we show here a good way to override sections of a docker-compose.yml file easily.
Why? Sometimes we have several environments that share almost all docker configuration. Having a common docker-compose.yml file and several docker-compose.override.yml files is a great way to manage your service configurations.</description></item><item><title>Allow writing of files in docker in Linux</title><link>https://diegojromerolopez.github.io/blog/2022/10/allow-writing-of-files-in-docker-in-linux/</link><pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</author><guid>https://diegojromerolopez.github.io/blog/2022/10/allow-writing-of-files-in-docker-in-linux/</guid><description>Docker is a container system that allow developers to have a common environment to develop and SRE/devops to have machine-independent deployment process.
Allow writing of files in docker in Linux I have been working on a small project in Python: functainer. The goal of this project is to provide a Python package to run functions in docker seamlessly: you only will docker and Python to run it.
Anyway, that project uses files as a mean of communication, i.</description></item></channel></rss>