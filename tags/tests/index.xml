<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tests on Diego J.'s Software Tar Pit</title><link>https://diegojromerolopez.github.io/tags/tests/</link><description>Recent content in tests on Diego J.'s Software Tar Pit</description><generator>Hugo -- gohugo.io</generator><managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</managingEditor><webMaster>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</webMaster><lastBuildDate>Sat, 05 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/tests/index.xml" rel="self" type="application/rss+xml"/><item><title>How to write a good unit test</title><link>https://diegojromerolopez.github.io/blog/2025/04/how-to-write-a-good-unit-test/</link><pubDate>Sat, 05 Apr 2025 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</author><guid>https://diegojromerolopez.github.io/blog/2025/04/how-to-write-a-good-unit-test/</guid><description>How to write a good unit test This post provides some guidelines about how to write a good unit test. There are some examples in Python with unittest.
Introduction In my last post I wrote about software quality not being taken seriously sometimes.
Tests are a good part of the software quality so I wanted to write a bit about the testing effort we should be doing in our code.</description></item><item><title>To test or not to test</title><link>https://diegojromerolopez.github.io/blog/2016/04/to-test-or-not-to-test/</link><pubDate>Sun, 03 Apr 2016 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-L贸pez)</author><guid>https://diegojromerolopez.github.io/blog/2016/04/to-test-or-not-to-test/</guid><description>Introduction Some years ago I did not use any tests. We were cowboys in CodeWest where only fearful and strong people survive.
Sometimes we tested some actions and assumed that everything else worked fine. But for the most part, code where developed almost like our sub-conscience dictated us what to type: we were guided by instinct.
Of course, users of my applications were not so amused by this when they found software faulted and had to wait to me to repair it.</description></item></channel></rss>