<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>conventions on Diego J.'s Software Tar Pit</title><link>https://diegojromerolopez.github.io/tags/conventions/</link><description>Recent content in conventions on Diego J.'s Software Tar Pit</description><generator>Hugo -- gohugo.io</generator><managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-López)</managingEditor><webMaster>diegojromerolopez@gmail.com (Diego J. Romero-López)</webMaster><lastBuildDate>Sun, 18 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/conventions/index.xml" rel="self" type="application/rss+xml"/><item><title>I do not like *args and **kwargs in Python</title><link>https://diegojromerolopez.github.io/blog/2025/05/i-do-not-like-args-and-kwargs-in-python/</link><pubDate>Sun, 18 May 2025 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2025/05/i-do-not-like-args-and-kwargs-in-python/</guid><description>I do not like *args and **kwargs in Python *args and **kwargs are the way to declare positional and keyword function arguments (resp.) in Python.
Introduction This post explains why I am a fan of naming the arguments and I do not like positional arguments nor the *args and **kwargs way of passing arguments.
Why I don&amp;rsquo;t like *args and **kwargs? Most of the time I only use *args and **kwargs when strictly necessary, like when inheriting from a class that uses them, and I need to pass the parameters to the parent class.</description></item></channel></rss>