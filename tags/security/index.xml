<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>security on Diego J.'s Software Tar Pit</title><link>https://diegojromerolopez.github.io/tags/security/</link><description>Recent content in security on Diego J.'s Software Tar Pit</description><generator>Hugo -- gohugo.io</generator><managingEditor>diegojromerolopez@gmail.com (Diego J. Romero-López)</managingEditor><webMaster>diegojromerolopez@gmail.com (Diego J. Romero-López)</webMaster><lastBuildDate>Sat, 12 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://diegojromerolopez.github.io/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>How to manage docker secrets</title><link>https://diegojromerolopez.github.io/blog/2023/08/how-to-manage-docker-secrets/</link><pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate><author>diegojromerolopez@gmail.com (Diego J. Romero-López)</author><guid>https://diegojromerolopez.github.io/blog/2023/08/how-to-manage-docker-secrets/</guid><description>How to manage docker secrets The product that is produced by most software developer teams is a docker image. How can be sure that we are not leaking secrets in docker images? If we include them as building arguments for sure they are going to be stored in the own image. Is there any way to avoid having them inside the docker image?
Introduction Suppose you have a docker image that requires a secret, you do not want to include it in the image, but you need during the process of building the image.</description></item></channel></rss>